// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: helloworld/v1/nearby.proto

package v1

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误定义
type NearbyErrorReason int32

const (
	// 未知错误
	NearbyErrorReason_NEARBY_UNKNOWN_ERROR NearbyErrorReason = 0
	// 请求参数错误
	NearbyErrorReason_NEARBY_BAD_REQUEST NearbyErrorReason = 1
	// 内部服务错误
	NearbyErrorReason_NEARBY_INTERNAL_ERROR NearbyErrorReason = 2
	// 资源不存在
	NearbyErrorReason_NEARBY_NOT_FOUND NearbyErrorReason = 3
)

// Enum value maps for NearbyErrorReason.
var (
	NearbyErrorReason_name = map[int32]string{
		0: "NEARBY_UNKNOWN_ERROR",
		1: "NEARBY_BAD_REQUEST",
		2: "NEARBY_INTERNAL_ERROR",
		3: "NEARBY_NOT_FOUND",
	}
	NearbyErrorReason_value = map[string]int32{
		"NEARBY_UNKNOWN_ERROR":  0,
		"NEARBY_BAD_REQUEST":    1,
		"NEARBY_INTERNAL_ERROR": 2,
		"NEARBY_NOT_FOUND":      3,
	}
)

func (x NearbyErrorReason) Enum() *NearbyErrorReason {
	p := new(NearbyErrorReason)
	*p = x
	return p
}

func (x NearbyErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NearbyErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_helloworld_v1_nearby_proto_enumTypes[0].Descriptor()
}

func (NearbyErrorReason) Type() protoreflect.EnumType {
	return &file_helloworld_v1_nearby_proto_enumTypes[0]
}

func (x NearbyErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NearbyErrorReason.Descriptor instead.
func (NearbyErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{0}
}

// 初始化寄存点地理位置数据请求
type InitLockerPointsGeoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitLockerPointsGeoRequest) Reset() {
	*x = InitLockerPointsGeoRequest{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitLockerPointsGeoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitLockerPointsGeoRequest) ProtoMessage() {}

func (x *InitLockerPointsGeoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitLockerPointsGeoRequest.ProtoReflect.Descriptor instead.
func (*InitLockerPointsGeoRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{0}
}

// 初始化寄存点地理位置数据响应
type InitLockerPointsGeoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitLockerPointsGeoReply) Reset() {
	*x = InitLockerPointsGeoReply{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitLockerPointsGeoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitLockerPointsGeoReply) ProtoMessage() {}

func (x *InitLockerPointsGeoReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitLockerPointsGeoReply.ProtoReflect.Descriptor instead.
func (*InitLockerPointsGeoReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{1}
}

func (x *InitLockerPointsGeoReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 查找附近的寄存点请求
type FindNearbyLockerPointsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 位置信息（三选一）
	CityName  string  `protobuf:"bytes,1,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"` // 城市名称
	Ip        string  `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`                             // IP地址
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`             // 经度
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`               // 纬度
	// 查询参数
	Radius        float64 `protobuf:"fixed64,5,opt,name=radius,proto3" json:"radius,omitempty"` // 半径（公里），默认5公里
	Limit         int64   `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`    // 返回数量限制，默认10个
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNearbyLockerPointsRequest) Reset() {
	*x = FindNearbyLockerPointsRequest{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNearbyLockerPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearbyLockerPointsRequest) ProtoMessage() {}

func (x *FindNearbyLockerPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearbyLockerPointsRequest.ProtoReflect.Descriptor instead.
func (*FindNearbyLockerPointsRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{2}
}

func (x *FindNearbyLockerPointsRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *FindNearbyLockerPointsRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *FindNearbyLockerPointsRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *FindNearbyLockerPointsRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *FindNearbyLockerPointsRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *FindNearbyLockerPointsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 附近寄存点信息
type NearbyLockerPointInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // 寄存点ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 寄存点名称
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`       // 地址
	Distance      float32                `protobuf:"fixed32,4,opt,name=distance,proto3" json:"distance,omitempty"`   // 距离（公里）
	Longitude     float32                `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
	Latitude      float32                `protobuf:"fixed32,6,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 纬度
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearbyLockerPointInfo) Reset() {
	*x = NearbyLockerPointInfo{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearbyLockerPointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbyLockerPointInfo) ProtoMessage() {}

func (x *NearbyLockerPointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbyLockerPointInfo.ProtoReflect.Descriptor instead.
func (*NearbyLockerPointInfo) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{3}
}

func (x *NearbyLockerPointInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NearbyLockerPointInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NearbyLockerPointInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NearbyLockerPointInfo) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *NearbyLockerPointInfo) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *NearbyLockerPointInfo) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

// 查找附近的寄存点响应
type FindNearbyLockerPointsReply struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Items         []*NearbyLockerPointInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 附近寄存点列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNearbyLockerPointsReply) Reset() {
	*x = FindNearbyLockerPointsReply{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNearbyLockerPointsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearbyLockerPointsReply) ProtoMessage() {}

func (x *FindNearbyLockerPointsReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearbyLockerPointsReply.ProtoReflect.Descriptor instead.
func (*FindNearbyLockerPointsReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{4}
}

func (x *FindNearbyLockerPointsReply) GetItems() []*NearbyLockerPointInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查找用户在指定城市内附近的寄存点请求
type FindNearbyLockerPointsInCityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CityName      string                 `protobuf:"bytes,1,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`           // 城市名称（必填）
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`                       // 用户经度（可选，如果不提供则使用城市中心点）
	Latitude      float64                `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`                         // 用户纬度（可选，如果不提供则使用城市中心点）
	Radius        float64                `protobuf:"fixed64,4,opt,name=radius,proto3" json:"radius,omitempty"`                             // 半径（公里），默认5公里
	Limit         int64                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`                                // 返回数量限制，默认10个
	Ip            string                 `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`                                       // 用户IP地址（可选，用于实时定位）
	UseRealtime   bool                   `protobuf:"varint,7,opt,name=use_realtime,json=useRealtime,proto3" json:"use_realtime,omitempty"` // 是否使用实时定位（默认false）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNearbyLockerPointsInCityRequest) Reset() {
	*x = FindNearbyLockerPointsInCityRequest{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNearbyLockerPointsInCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearbyLockerPointsInCityRequest) ProtoMessage() {}

func (x *FindNearbyLockerPointsInCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearbyLockerPointsInCityRequest.ProtoReflect.Descriptor instead.
func (*FindNearbyLockerPointsInCityRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{5}
}

func (x *FindNearbyLockerPointsInCityRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *FindNearbyLockerPointsInCityRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *FindNearbyLockerPointsInCityRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *FindNearbyLockerPointsInCityRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *FindNearbyLockerPointsInCityRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindNearbyLockerPointsInCityRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *FindNearbyLockerPointsInCityRequest) GetUseRealtime() bool {
	if x != nil {
		return x.UseRealtime
	}
	return false
}

// 使用实时定位查找我的附近寄存点请求
type FindMyNearbyLockerPointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CityName      string                 `protobuf:"bytes,1,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"` // 城市名称（必填）
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`                             // 用户IP地址（可选，用于实时定位）
	Radius        float64                `protobuf:"fixed64,3,opt,name=radius,proto3" json:"radius,omitempty"`                   // 半径（公里），默认5公里
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`                      // 返回数量限制，默认10个
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindMyNearbyLockerPointsRequest) Reset() {
	*x = FindMyNearbyLockerPointsRequest{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindMyNearbyLockerPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMyNearbyLockerPointsRequest) ProtoMessage() {}

func (x *FindMyNearbyLockerPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMyNearbyLockerPointsRequest.ProtoReflect.Descriptor instead.
func (*FindMyNearbyLockerPointsRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{6}
}

func (x *FindMyNearbyLockerPointsRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *FindMyNearbyLockerPointsRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *FindMyNearbyLockerPointsRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *FindMyNearbyLockerPointsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 搜索指定城市内寄存点请求
type SearchLockerPointsInCityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CityName      string                 `protobuf:"bytes,1,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`  // 城市名称（必填）
	Keyword       string                 `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`                    // 搜索关键词（可选，如果提供则按名称或地址搜索）
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 页码，从1开始
	PageSize      int64                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页大小，默认10
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchLockerPointsInCityRequest) Reset() {
	*x = SearchLockerPointsInCityRequest{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchLockerPointsInCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLockerPointsInCityRequest) ProtoMessage() {}

func (x *SearchLockerPointsInCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLockerPointsInCityRequest.ProtoReflect.Descriptor instead.
func (*SearchLockerPointsInCityRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{7}
}

func (x *SearchLockerPointsInCityRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *SearchLockerPointsInCityRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchLockerPointsInCityRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchLockerPointsInCityRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 寄存点详细信息
type LockerPointDetail struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  // 寄存点ID
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                               // 寄存点名称
	Address         string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                         // 地址
	Longitude       float32                `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`                                   // 经度
	Latitude        float32                `protobuf:"fixed32,5,opt,name=latitude,proto3" json:"latitude,omitempty"`                                     // 纬度
	AvailableLarge  int32                  `protobuf:"varint,6,opt,name=available_large,json=availableLarge,proto3" json:"available_large,omitempty"`    // 可用大柜数量
	AvailableMedium int32                  `protobuf:"varint,7,opt,name=available_medium,json=availableMedium,proto3" json:"available_medium,omitempty"` // 可用中柜数量
	AvailableSmall  int32                  `protobuf:"varint,8,opt,name=available_small,json=availableSmall,proto3" json:"available_small,omitempty"`    // 可用小柜数量
	OpenTime        string                 `protobuf:"bytes,9,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`                       // 营业时间
	Mobile          string                 `protobuf:"bytes,10,opt,name=mobile,proto3" json:"mobile,omitempty"`                                          // 联系电话
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LockerPointDetail) Reset() {
	*x = LockerPointDetail{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockerPointDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockerPointDetail) ProtoMessage() {}

func (x *LockerPointDetail) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockerPointDetail.ProtoReflect.Descriptor instead.
func (*LockerPointDetail) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{8}
}

func (x *LockerPointDetail) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LockerPointDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LockerPointDetail) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LockerPointDetail) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LockerPointDetail) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LockerPointDetail) GetAvailableLarge() int32 {
	if x != nil {
		return x.AvailableLarge
	}
	return 0
}

func (x *LockerPointDetail) GetAvailableMedium() int32 {
	if x != nil {
		return x.AvailableMedium
	}
	return 0
}

func (x *LockerPointDetail) GetAvailableSmall() int32 {
	if x != nil {
		return x.AvailableSmall
	}
	return 0
}

func (x *LockerPointDetail) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *LockerPointDetail) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

// 搜索指定城市内寄存点响应
type SearchLockerPointsInCityReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*LockerPointDetail   `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                        // 寄存点列表
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总记录数
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码
	PageSize      int64                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchLockerPointsInCityReply) Reset() {
	*x = SearchLockerPointsInCityReply{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchLockerPointsInCityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLockerPointsInCityReply) ProtoMessage() {}

func (x *SearchLockerPointsInCityReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLockerPointsInCityReply.ProtoReflect.Descriptor instead.
func (*SearchLockerPointsInCityReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{9}
}

func (x *SearchLockerPointsInCityReply) GetItems() []*LockerPointDetail {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchLockerPointsInCityReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchLockerPointsInCityReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchLockerPointsInCityReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取城市寄存点分布图请求
type GetCityLockerPointsMapRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CityName      string                 `protobuf:"bytes,1,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`                 // 城市名称（必填）
	NorthLat      float64                `protobuf:"fixed64,2,opt,name=north_lat,json=northLat,proto3" json:"north_lat,omitempty"`               // 北纬度（地图边界）
	SouthLat      float64                `protobuf:"fixed64,3,opt,name=south_lat,json=southLat,proto3" json:"south_lat,omitempty"`               // 南纬度（地图边界）
	EastLng       float64                `protobuf:"fixed64,4,opt,name=east_lng,json=eastLng,proto3" json:"east_lng,omitempty"`                  // 东经度（地图边界）
	WestLng       float64                `protobuf:"fixed64,5,opt,name=west_lng,json=westLng,proto3" json:"west_lng,omitempty"`                  // 西经度（地图边界）
	ZoomLevel     int32                  `protobuf:"varint,6,opt,name=zoom_level,json=zoomLevel,proto3" json:"zoom_level,omitempty"`             // 地图缩放级别（1-20）
	EnableCluster bool                   `protobuf:"varint,7,opt,name=enable_cluster,json=enableCluster,proto3" json:"enable_cluster,omitempty"` // 是否启用聚合（默认true）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCityLockerPointsMapRequest) Reset() {
	*x = GetCityLockerPointsMapRequest{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCityLockerPointsMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityLockerPointsMapRequest) ProtoMessage() {}

func (x *GetCityLockerPointsMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityLockerPointsMapRequest.ProtoReflect.Descriptor instead.
func (*GetCityLockerPointsMapRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{10}
}

func (x *GetCityLockerPointsMapRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *GetCityLockerPointsMapRequest) GetNorthLat() float64 {
	if x != nil {
		return x.NorthLat
	}
	return 0
}

func (x *GetCityLockerPointsMapRequest) GetSouthLat() float64 {
	if x != nil {
		return x.SouthLat
	}
	return 0
}

func (x *GetCityLockerPointsMapRequest) GetEastLng() float64 {
	if x != nil {
		return x.EastLng
	}
	return 0
}

func (x *GetCityLockerPointsMapRequest) GetWestLng() float64 {
	if x != nil {
		return x.WestLng
	}
	return 0
}

func (x *GetCityLockerPointsMapRequest) GetZoomLevel() int32 {
	if x != nil {
		return x.ZoomLevel
	}
	return 0
}

func (x *GetCityLockerPointsMapRequest) GetEnableCluster() bool {
	if x != nil {
		return x.EnableCluster
	}
	return false
}

// 地图点位信息（详细点位）
type MapPointInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                               // 寄存点ID
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                            // 寄存点名称
	Address        string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                      // 地址
	Longitude      float64                `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`                                // 经度
	Latitude       float64                `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`                                  // 纬度
	TotalAvailable int32                  `protobuf:"varint,6,opt,name=total_available,json=totalAvailable,proto3" json:"total_available,omitempty"` // 总可用柜数量
	Status         string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`                                        // 状态（available/busy/full）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MapPointInfo) Reset() {
	*x = MapPointInfo{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapPointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPointInfo) ProtoMessage() {}

func (x *MapPointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapPointInfo.ProtoReflect.Descriptor instead.
func (*MapPointInfo) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{11}
}

func (x *MapPointInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MapPointInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MapPointInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MapPointInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *MapPointInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *MapPointInfo) GetTotalAvailable() int32 {
	if x != nil {
		return x.TotalAvailable
	}
	return 0
}

func (x *MapPointInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 聚合点信息
type ClusterInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Longitude      float64                `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"`                                // 聚合点经度
	Latitude       float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`                                  // 聚合点纬度
	Count          int32                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                                         // 聚合点数量
	TotalAvailable int32                  `protobuf:"varint,4,opt,name=total_available,json=totalAvailable,proto3" json:"total_available,omitempty"` // 聚合点总可用柜数量
	PointIds       []int32                `protobuf:"varint,5,rep,packed,name=point_ids,json=pointIds,proto3" json:"point_ids,omitempty"`            // 聚合的寄存点ID列表
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{12}
}

func (x *ClusterInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *ClusterInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ClusterInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ClusterInfo) GetTotalAvailable() int32 {
	if x != nil {
		return x.TotalAvailable
	}
	return 0
}

func (x *ClusterInfo) GetPointIds() []int32 {
	if x != nil {
		return x.PointIds
	}
	return nil
}

// 获取城市寄存点分布图响应
type GetCityLockerPointsMapReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*MapPointInfo        `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`                               // 详细点位列表
	Clusters      []*ClusterInfo         `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`                           // 聚合点列表
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`    // 总寄存点数量
	ZoomLevel     int32                  `protobuf:"varint,4,opt,name=zoom_level,json=zoomLevel,proto3" json:"zoom_level,omitempty"`       // 当前缩放级别
	IsClustered   bool                   `protobuf:"varint,5,opt,name=is_clustered,json=isClustered,proto3" json:"is_clustered,omitempty"` // 是否返回聚合数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCityLockerPointsMapReply) Reset() {
	*x = GetCityLockerPointsMapReply{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCityLockerPointsMapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityLockerPointsMapReply) ProtoMessage() {}

func (x *GetCityLockerPointsMapReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityLockerPointsMapReply.ProtoReflect.Descriptor instead.
func (*GetCityLockerPointsMapReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{13}
}

func (x *GetCityLockerPointsMapReply) GetPoints() []*MapPointInfo {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *GetCityLockerPointsMapReply) GetClusters() []*ClusterInfo {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *GetCityLockerPointsMapReply) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetCityLockerPointsMapReply) GetZoomLevel() int32 {
	if x != nil {
		return x.ZoomLevel
	}
	return 0
}

func (x *GetCityLockerPointsMapReply) GetIsClustered() bool {
	if x != nil {
		return x.IsClustered
	}
	return false
}

// 获取我的附近信息请求
type GetMyNearbyInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`                 // 用户IP地址（可选，用于定位）
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"` // 用户经度（可选，如果提供则优先使用）
	Latitude      float64                `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 用户纬度（可选，如果提供则优先使用）
	Radius        float64                `protobuf:"fixed64,4,opt,name=radius,proto3" json:"radius,omitempty"`       // 搜索半径（公里），默认5公里
	Limit         int64                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`          // 返回寄存点数量限制，默认20个
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyNearbyInfoRequest) Reset() {
	*x = GetMyNearbyInfoRequest{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyNearbyInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyNearbyInfoRequest) ProtoMessage() {}

func (x *GetMyNearbyInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyNearbyInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMyNearbyInfoRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{14}
}

func (x *GetMyNearbyInfoRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GetMyNearbyInfoRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetMyNearbyInfoRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetMyNearbyInfoRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *GetMyNearbyInfoRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 用户位置信息
type UserLocationInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Longitude     float64                `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"`                         // 用户经度
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`                           // 用户纬度
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                               // 详细地址
	City          string                 `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`                                     // 城市名称
	District      string                 `protobuf:"bytes,5,opt,name=district,proto3" json:"district,omitempty"`                             // 区县
	Province      string                 `protobuf:"bytes,6,opt,name=province,proto3" json:"province,omitempty"`                             // 省份
	LocationType  string                 `protobuf:"bytes,7,opt,name=location_type,json=locationType,proto3" json:"location_type,omitempty"` // 定位类型（ip/gps/city_center）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLocationInfo) Reset() {
	*x = UserLocationInfo{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLocationInfo) ProtoMessage() {}

func (x *UserLocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLocationInfo.ProtoReflect.Descriptor instead.
func (*UserLocationInfo) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{15}
}

func (x *UserLocationInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *UserLocationInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UserLocationInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserLocationInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserLocationInfo) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UserLocationInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserLocationInfo) GetLocationType() string {
	if x != nil {
		return x.LocationType
	}
	return ""
}

// 获取我的附近信息响应
type GetMyNearbyInfoReply struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	UserLocation  *UserLocationInfo        `protobuf:"bytes,1,opt,name=user_location,json=userLocation,proto3" json:"user_location,omitempty"`   // 用户位置信息
	NearbyPoints  []*NearbyLockerPointInfo `protobuf:"bytes,2,rep,name=nearby_points,json=nearbyPoints,proto3" json:"nearby_points,omitempty"`   // 附近寄存点列表
	TotalCount    int32                    `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`        // 附近寄存点总数
	SearchRadius  float64                  `protobuf:"fixed64,4,opt,name=search_radius,json=searchRadius,proto3" json:"search_radius,omitempty"` // 实际搜索半径
	BaiduMapAk    string                   `protobuf:"bytes,5,opt,name=baidu_map_ak,json=baiduMapAk,proto3" json:"baidu_map_ak,omitempty"`       // 百度地图AK（前端使用）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyNearbyInfoReply) Reset() {
	*x = GetMyNearbyInfoReply{}
	mi := &file_helloworld_v1_nearby_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyNearbyInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyNearbyInfoReply) ProtoMessage() {}

func (x *GetMyNearbyInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_nearby_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyNearbyInfoReply.ProtoReflect.Descriptor instead.
func (*GetMyNearbyInfoReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_nearby_proto_rawDescGZIP(), []int{16}
}

func (x *GetMyNearbyInfoReply) GetUserLocation() *UserLocationInfo {
	if x != nil {
		return x.UserLocation
	}
	return nil
}

func (x *GetMyNearbyInfoReply) GetNearbyPoints() []*NearbyLockerPointInfo {
	if x != nil {
		return x.NearbyPoints
	}
	return nil
}

func (x *GetMyNearbyInfoReply) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetMyNearbyInfoReply) GetSearchRadius() float64 {
	if x != nil {
		return x.SearchRadius
	}
	return 0
}

func (x *GetMyNearbyInfoReply) GetBaiduMapAk() string {
	if x != nil {
		return x.BaiduMapAk
	}
	return ""
}

var File_helloworld_v1_nearby_proto protoreflect.FileDescriptor

const file_helloworld_v1_nearby_proto_rawDesc = "" +
	"\n" +
	"\x1ahelloworld/v1/nearby.proto\x12\x11api.helloworld.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x13errors/errors.proto\"\x1c\n" +
	"\x1aInitLockerPointsGeoRequest\"4\n" +
	"\x18InitLockerPointsGeoReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xb4\x01\n" +
	"\x1dFindNearbyLockerPointsRequest\x12\x1b\n" +
	"\tcity_name\x18\x01 \x01(\tR\bcityName\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x04 \x01(\x01R\blatitude\x12\x16\n" +
	"\x06radius\x18\x05 \x01(\x01R\x06radius\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x03R\x05limit\"\xab\x01\n" +
	"\x15NearbyLockerPointInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1a\n" +
	"\bdistance\x18\x04 \x01(\x02R\bdistance\x12\x1c\n" +
	"\tlongitude\x18\x05 \x01(\x02R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x06 \x01(\x02R\blatitude\"]\n" +
	"\x1bFindNearbyLockerPointsReply\x12>\n" +
	"\x05items\x18\x01 \x03(\v2(.api.helloworld.v1.NearbyLockerPointInfoR\x05items\"\xdd\x01\n" +
	"#FindNearbyLockerPointsInCityRequest\x12\x1b\n" +
	"\tcity_name\x18\x01 \x01(\tR\bcityName\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x03 \x01(\x01R\blatitude\x12\x16\n" +
	"\x06radius\x18\x04 \x01(\x01R\x06radius\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x03R\x05limit\x12\x0e\n" +
	"\x02ip\x18\x06 \x01(\tR\x02ip\x12!\n" +
	"\fuse_realtime\x18\a \x01(\bR\vuseRealtime\"|\n" +
	"\x1fFindMyNearbyLockerPointsRequest\x12\x1b\n" +
	"\tcity_name\x18\x01 \x01(\tR\bcityName\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x16\n" +
	"\x06radius\x18\x03 \x01(\x01R\x06radius\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\"\x89\x01\n" +
	"\x1fSearchLockerPointsInCityRequest\x12\x1b\n" +
	"\tcity_name\x18\x01 \x01(\tR\bcityName\x12\x18\n" +
	"\akeyword\x18\x02 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x03R\bpageSize\"\xbd\x02\n" +
	"\x11LockerPointDetail\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1c\n" +
	"\tlongitude\x18\x04 \x01(\x02R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x05 \x01(\x02R\blatitude\x12'\n" +
	"\x0favailable_large\x18\x06 \x01(\x05R\x0eavailableLarge\x12)\n" +
	"\x10available_medium\x18\a \x01(\x05R\x0favailableMedium\x12'\n" +
	"\x0favailable_small\x18\b \x01(\x05R\x0eavailableSmall\x12\x1b\n" +
	"\topen_time\x18\t \x01(\tR\bopenTime\x12\x16\n" +
	"\x06mobile\x18\n" +
	" \x01(\tR\x06mobile\"\xa2\x01\n" +
	"\x1dSearchLockerPointsInCityReply\x12:\n" +
	"\x05items\x18\x01 \x03(\v2$.api.helloworld.v1.LockerPointDetailR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x03R\bpageSize\"\xf2\x01\n" +
	"\x1dGetCityLockerPointsMapRequest\x12\x1b\n" +
	"\tcity_name\x18\x01 \x01(\tR\bcityName\x12\x1b\n" +
	"\tnorth_lat\x18\x02 \x01(\x01R\bnorthLat\x12\x1b\n" +
	"\tsouth_lat\x18\x03 \x01(\x01R\bsouthLat\x12\x19\n" +
	"\beast_lng\x18\x04 \x01(\x01R\aeastLng\x12\x19\n" +
	"\bwest_lng\x18\x05 \x01(\x01R\awestLng\x12\x1d\n" +
	"\n" +
	"zoom_level\x18\x06 \x01(\x05R\tzoomLevel\x12%\n" +
	"\x0eenable_cluster\x18\a \x01(\bR\renableCluster\"\xc7\x01\n" +
	"\fMapPointInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1c\n" +
	"\tlongitude\x18\x04 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x05 \x01(\x01R\blatitude\x12'\n" +
	"\x0ftotal_available\x18\x06 \x01(\x05R\x0etotalAvailable\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\"\xa3\x01\n" +
	"\vClusterInfo\x12\x1c\n" +
	"\tlongitude\x18\x01 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x05R\x05count\x12'\n" +
	"\x0ftotal_available\x18\x04 \x01(\x05R\x0etotalAvailable\x12\x1b\n" +
	"\tpoint_ids\x18\x05 \x03(\x05R\bpointIds\"\xf5\x01\n" +
	"\x1bGetCityLockerPointsMapReply\x127\n" +
	"\x06points\x18\x01 \x03(\v2\x1f.api.helloworld.v1.MapPointInfoR\x06points\x12:\n" +
	"\bclusters\x18\x02 \x03(\v2\x1e.api.helloworld.v1.ClusterInfoR\bclusters\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12\x1d\n" +
	"\n" +
	"zoom_level\x18\x04 \x01(\x05R\tzoomLevel\x12!\n" +
	"\fis_clustered\x18\x05 \x01(\bR\visClustered\"\x90\x01\n" +
	"\x16GetMyNearbyInfoRequest\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x03 \x01(\x01R\blatitude\x12\x16\n" +
	"\x06radius\x18\x04 \x01(\x01R\x06radius\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x03R\x05limit\"\xd7\x01\n" +
	"\x10UserLocationInfo\x12\x1c\n" +
	"\tlongitude\x18\x01 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x12\n" +
	"\x04city\x18\x04 \x01(\tR\x04city\x12\x1a\n" +
	"\bdistrict\x18\x05 \x01(\tR\bdistrict\x12\x1a\n" +
	"\bprovince\x18\x06 \x01(\tR\bprovince\x12#\n" +
	"\rlocation_type\x18\a \x01(\tR\flocationType\"\x97\x02\n" +
	"\x14GetMyNearbyInfoReply\x12H\n" +
	"\ruser_location\x18\x01 \x01(\v2#.api.helloworld.v1.UserLocationInfoR\fuserLocation\x12M\n" +
	"\rnearby_points\x18\x02 \x03(\v2(.api.helloworld.v1.NearbyLockerPointInfoR\fnearbyPoints\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12#\n" +
	"\rsearch_radius\x18\x04 \x01(\x01R\fsearchRadius\x12 \n" +
	"\fbaidu_map_ak\x18\x05 \x01(\tR\n" +
	"baiduMapAk*\x94\x01\n" +
	"\x11NearbyErrorReason\x12\x1e\n" +
	"\x14NEARBY_UNKNOWN_ERROR\x10\x00\x1a\x04\xa8E\xf4\x03\x12\x1c\n" +
	"\x12NEARBY_BAD_REQUEST\x10\x01\x1a\x04\xa8E\x90\x03\x12\x1f\n" +
	"\x15NEARBY_INTERNAL_ERROR\x10\x02\x1a\x04\xa8E\xf4\x03\x12\x1a\n" +
	"\x10NEARBY_NOT_FOUND\x10\x03\x1a\x04\xa8E\x94\x03\x1a\x04\xa0E\xf4\x032\xe6\b\n" +
	"\x06Nearby\x12\x94\x01\n" +
	"\x13InitLockerPointsGeo\x12-.api.helloworld.v1.InitLockerPointsGeoRequest\x1a+.api.helloworld.v1.InitLockerPointsGeoReply\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/api/admin/nearby/init\x12\x9d\x01\n" +
	"\x16FindNearbyLockerPoints\x120.api.helloworld.v1.FindNearbyLockerPointsRequest\x1a..api.helloworld.v1.FindNearbyLockerPointsReply\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/api/nearby/locker-points\x12\xae\x01\n" +
	"\x1cFindNearbyLockerPointsInCity\x126.api.helloworld.v1.FindNearbyLockerPointsInCityRequest\x1a..api.helloworld.v1.FindNearbyLockerPointsReply\"&\x82\xd3\xe4\x93\x02 \x12\x1e/api/nearby/city/locker-points\x12\xad\x01\n" +
	"\x18FindMyNearbyLockerPoints\x122.api.helloworld.v1.FindMyNearbyLockerPointsRequest\x1a..api.helloworld.v1.FindNearbyLockerPointsReply\"-\x82\xd3\xe4\x93\x02'\x12%/api/nearby/my-location/locker-points\x12\xa1\x01\n" +
	"\x18SearchLockerPointsInCity\x122.api.helloworld.v1.SearchLockerPointsInCityRequest\x1a0.api.helloworld.v1.SearchLockerPointsInCityReply\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/nearby/city/search\x12\x98\x01\n" +
	"\x16GetCityLockerPointsMap\x120.api.helloworld.v1.GetCityLockerPointsMapRequest\x1a..api.helloworld.v1.GetCityLockerPointsMapReply\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/api/nearby/city/map\x12\x84\x01\n" +
	"\x0fGetMyNearbyInfo\x12).api.helloworld.v1.GetMyNearbyInfoRequest\x1a'.api.helloworld.v1.GetMyNearbyInfoReply\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/nearby/my-nearbyB7\n" +
	"\x11api.helloworld.v1P\x01Z ito-deposit/api/helloworld/v1;v1b\x06proto3"

var (
	file_helloworld_v1_nearby_proto_rawDescOnce sync.Once
	file_helloworld_v1_nearby_proto_rawDescData []byte
)

func file_helloworld_v1_nearby_proto_rawDescGZIP() []byte {
	file_helloworld_v1_nearby_proto_rawDescOnce.Do(func() {
		file_helloworld_v1_nearby_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_helloworld_v1_nearby_proto_rawDesc), len(file_helloworld_v1_nearby_proto_rawDesc)))
	})
	return file_helloworld_v1_nearby_proto_rawDescData
}

var file_helloworld_v1_nearby_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_helloworld_v1_nearby_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_helloworld_v1_nearby_proto_goTypes = []any{
	(NearbyErrorReason)(0),                      // 0: api.helloworld.v1.NearbyErrorReason
	(*InitLockerPointsGeoRequest)(nil),          // 1: api.helloworld.v1.InitLockerPointsGeoRequest
	(*InitLockerPointsGeoReply)(nil),            // 2: api.helloworld.v1.InitLockerPointsGeoReply
	(*FindNearbyLockerPointsRequest)(nil),       // 3: api.helloworld.v1.FindNearbyLockerPointsRequest
	(*NearbyLockerPointInfo)(nil),               // 4: api.helloworld.v1.NearbyLockerPointInfo
	(*FindNearbyLockerPointsReply)(nil),         // 5: api.helloworld.v1.FindNearbyLockerPointsReply
	(*FindNearbyLockerPointsInCityRequest)(nil), // 6: api.helloworld.v1.FindNearbyLockerPointsInCityRequest
	(*FindMyNearbyLockerPointsRequest)(nil),     // 7: api.helloworld.v1.FindMyNearbyLockerPointsRequest
	(*SearchLockerPointsInCityRequest)(nil),     // 8: api.helloworld.v1.SearchLockerPointsInCityRequest
	(*LockerPointDetail)(nil),                   // 9: api.helloworld.v1.LockerPointDetail
	(*SearchLockerPointsInCityReply)(nil),       // 10: api.helloworld.v1.SearchLockerPointsInCityReply
	(*GetCityLockerPointsMapRequest)(nil),       // 11: api.helloworld.v1.GetCityLockerPointsMapRequest
	(*MapPointInfo)(nil),                        // 12: api.helloworld.v1.MapPointInfo
	(*ClusterInfo)(nil),                         // 13: api.helloworld.v1.ClusterInfo
	(*GetCityLockerPointsMapReply)(nil),         // 14: api.helloworld.v1.GetCityLockerPointsMapReply
	(*GetMyNearbyInfoRequest)(nil),              // 15: api.helloworld.v1.GetMyNearbyInfoRequest
	(*UserLocationInfo)(nil),                    // 16: api.helloworld.v1.UserLocationInfo
	(*GetMyNearbyInfoReply)(nil),                // 17: api.helloworld.v1.GetMyNearbyInfoReply
}
var file_helloworld_v1_nearby_proto_depIdxs = []int32{
	4,  // 0: api.helloworld.v1.FindNearbyLockerPointsReply.items:type_name -> api.helloworld.v1.NearbyLockerPointInfo
	9,  // 1: api.helloworld.v1.SearchLockerPointsInCityReply.items:type_name -> api.helloworld.v1.LockerPointDetail
	12, // 2: api.helloworld.v1.GetCityLockerPointsMapReply.points:type_name -> api.helloworld.v1.MapPointInfo
	13, // 3: api.helloworld.v1.GetCityLockerPointsMapReply.clusters:type_name -> api.helloworld.v1.ClusterInfo
	16, // 4: api.helloworld.v1.GetMyNearbyInfoReply.user_location:type_name -> api.helloworld.v1.UserLocationInfo
	4,  // 5: api.helloworld.v1.GetMyNearbyInfoReply.nearby_points:type_name -> api.helloworld.v1.NearbyLockerPointInfo
	1,  // 6: api.helloworld.v1.Nearby.InitLockerPointsGeo:input_type -> api.helloworld.v1.InitLockerPointsGeoRequest
	3,  // 7: api.helloworld.v1.Nearby.FindNearbyLockerPoints:input_type -> api.helloworld.v1.FindNearbyLockerPointsRequest
	6,  // 8: api.helloworld.v1.Nearby.FindNearbyLockerPointsInCity:input_type -> api.helloworld.v1.FindNearbyLockerPointsInCityRequest
	7,  // 9: api.helloworld.v1.Nearby.FindMyNearbyLockerPoints:input_type -> api.helloworld.v1.FindMyNearbyLockerPointsRequest
	8,  // 10: api.helloworld.v1.Nearby.SearchLockerPointsInCity:input_type -> api.helloworld.v1.SearchLockerPointsInCityRequest
	11, // 11: api.helloworld.v1.Nearby.GetCityLockerPointsMap:input_type -> api.helloworld.v1.GetCityLockerPointsMapRequest
	15, // 12: api.helloworld.v1.Nearby.GetMyNearbyInfo:input_type -> api.helloworld.v1.GetMyNearbyInfoRequest
	2,  // 13: api.helloworld.v1.Nearby.InitLockerPointsGeo:output_type -> api.helloworld.v1.InitLockerPointsGeoReply
	5,  // 14: api.helloworld.v1.Nearby.FindNearbyLockerPoints:output_type -> api.helloworld.v1.FindNearbyLockerPointsReply
	5,  // 15: api.helloworld.v1.Nearby.FindNearbyLockerPointsInCity:output_type -> api.helloworld.v1.FindNearbyLockerPointsReply
	5,  // 16: api.helloworld.v1.Nearby.FindMyNearbyLockerPoints:output_type -> api.helloworld.v1.FindNearbyLockerPointsReply
	10, // 17: api.helloworld.v1.Nearby.SearchLockerPointsInCity:output_type -> api.helloworld.v1.SearchLockerPointsInCityReply
	14, // 18: api.helloworld.v1.Nearby.GetCityLockerPointsMap:output_type -> api.helloworld.v1.GetCityLockerPointsMapReply
	17, // 19: api.helloworld.v1.Nearby.GetMyNearbyInfo:output_type -> api.helloworld.v1.GetMyNearbyInfoReply
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_helloworld_v1_nearby_proto_init() }
func file_helloworld_v1_nearby_proto_init() {
	if File_helloworld_v1_nearby_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_helloworld_v1_nearby_proto_rawDesc), len(file_helloworld_v1_nearby_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helloworld_v1_nearby_proto_goTypes,
		DependencyIndexes: file_helloworld_v1_nearby_proto_depIdxs,
		EnumInfos:         file_helloworld_v1_nearby_proto_enumTypes,
		MessageInfos:      file_helloworld_v1_nearby_proto_msgTypes,
	}.Build()
	File_helloworld_v1_nearby_proto = out.File
	file_helloworld_v1_nearby_proto_goTypes = nil
	file_helloworld_v1_nearby_proto_depIdxs = nil
}
