// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: helloworld/v1/city.proto

package v1

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误定义
type ErrorReason int32

const (
	// 未知错误
	ErrorReason_UNKNOWN_ERROR ErrorReason = 0
	// 请求参数错误
	ErrorReason_BAD_REQUEST ErrorReason = 1
	// 内部服务错误
	ErrorReason_INTERNAL_ERROR ErrorReason = 2
	// 资源不存在
	ErrorReason_NOT_FOUND ErrorReason = 3
	// 资源已存在
	ErrorReason_ALREADY_EXISTS ErrorReason = 4
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "BAD_REQUEST",
		2: "INTERNAL_ERROR",
		3: "NOT_FOUND",
		4: "ALREADY_EXISTS",
	}
	ErrorReason_value = map[string]int32{
		"UNKNOWN_ERROR":  0,
		"BAD_REQUEST":    1,
		"INTERNAL_ERROR": 2,
		"NOT_FOUND":      3,
		"ALREADY_EXISTS": 4,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_helloworld_v1_city_proto_enumTypes[0].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_helloworld_v1_city_proto_enumTypes[0]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{0}
}

// 创建城市请求
type CreateCityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`      // 城市名称
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` // 状态(1:启用,0:禁用)
}

func (x *CreateCityRequest) Reset() {
	*x = CreateCityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCityRequest) ProtoMessage() {}

func (x *CreateCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCityRequest.ProtoReflect.Descriptor instead.
func (*CreateCityRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCityRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 创建城市响应
type CreateCityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // 城市ID
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 城市名称
	Code      string  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`             // 城市编码
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 纬度
	Longitude float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
	Status    int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`        // 状态(1:启用,0:禁用)
}

func (x *CreateCityReply) Reset() {
	*x = CreateCityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCityReply) ProtoMessage() {}

func (x *CreateCityReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCityReply.ProtoReflect.Descriptor instead.
func (*CreateCityReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCityReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateCityReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCityReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateCityReply) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateCityReply) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CreateCityReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 更新城市请求
type UpdateCityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // 城市ID
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`      // 城市名称
	Status int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 状态(1:启用,0:禁用)
}

func (x *UpdateCityRequest) Reset() {
	*x = UpdateCityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCityRequest) ProtoMessage() {}

func (x *UpdateCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCityRequest.ProtoReflect.Descriptor instead.
func (*UpdateCityRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCityRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCityRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 更新城市响应
type UpdateCityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // 城市ID
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 城市名称
	Code      string  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`             // 城市编码
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 纬度
	Longitude float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
	Status    int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`        // 状态(1:启用,0:禁用)
}

func (x *UpdateCityReply) Reset() {
	*x = UpdateCityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCityReply) ProtoMessage() {}

func (x *UpdateCityReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCityReply.ProtoReflect.Descriptor instead.
func (*UpdateCityReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCityReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCityReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCityReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateCityReply) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateCityReply) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *UpdateCityReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 获取城市详情请求
type GetCityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 城市ID
}

func (x *GetCityRequest) Reset() {
	*x = GetCityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityRequest) ProtoMessage() {}

func (x *GetCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityRequest.ProtoReflect.Descriptor instead.
func (*GetCityRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{4}
}

func (x *GetCityRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取城市详情响应
type GetCityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // 城市ID
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 城市名称
	Code      string  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`             // 城市编码
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 纬度
	Longitude float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
	Status    int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`        // 状态(1:启用,0:禁用)
}

func (x *GetCityReply) Reset() {
	*x = GetCityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityReply) ProtoMessage() {}

func (x *GetCityReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityReply.ProtoReflect.Descriptor instead.
func (*GetCityReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{5}
}

func (x *GetCityReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCityReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCityReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetCityReply) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetCityReply) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetCityReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 城市信息
type CityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // 城市ID
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 城市名称
	Code      string  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`             // 城市编码
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 纬度
	Longitude float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
	Status    int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`        // 状态(1:启用,0:禁用)
}

func (x *CityInfo) Reset() {
	*x = CityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityInfo) ProtoMessage() {}

func (x *CityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityInfo.ProtoReflect.Descriptor instead.
func (*CityInfo) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{6}
}

func (x *CityInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CityInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CityInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CityInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CityInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CityInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 获取城市列表请求
type ListCitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	Status   int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                     // 状态(1:启用,0:禁用,-1:全部)
}

func (x *ListCitiesRequest) Reset() {
	*x = ListCitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCitiesRequest) ProtoMessage() {}

func (x *ListCitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCitiesRequest.ProtoReflect.Descriptor instead.
func (*ListCitiesRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{7}
}

func (x *ListCitiesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCitiesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCitiesRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 获取城市列表响应
type ListCitiesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	Items []*CityInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`  // 城市列表
}

func (x *ListCitiesReply) Reset() {
	*x = ListCitiesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCitiesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCitiesReply) ProtoMessage() {}

func (x *ListCitiesReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCitiesReply.ProtoReflect.Descriptor instead.
func (*ListCitiesReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{8}
}

func (x *ListCitiesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCitiesReply) GetItems() []*CityInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

// 更新城市状态请求
type UpdateCityStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // 城市ID
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` // 状态(1:启用,0:禁用)
}

func (x *UpdateCityStatusRequest) Reset() {
	*x = UpdateCityStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCityStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCityStatusRequest) ProtoMessage() {}

func (x *UpdateCityStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCityStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateCityStatusRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCityStatusRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCityStatusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 更新城市状态响应
type UpdateCityStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
}

func (x *UpdateCityStatusReply) Reset() {
	*x = UpdateCityStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCityStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCityStatusReply) ProtoMessage() {}

func (x *UpdateCityStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCityStatusReply.ProtoReflect.Descriptor instead.
func (*UpdateCityStatusReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCityStatusReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 用户端城市信息
type UserCityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // 城市ID
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 城市名称
	Code      string  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`             // 城市编码
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 纬度
	Longitude float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
}

func (x *UserCityInfo) Reset() {
	*x = UserCityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCityInfo) ProtoMessage() {}

func (x *UserCityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCityInfo.ProtoReflect.Descriptor instead.
func (*UserCityInfo) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{11}
}

func (x *UserCityInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserCityInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserCityInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserCityInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UserCityInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// 获取用户端城市列表请求
type ListUserCitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
}

func (x *ListUserCitiesRequest) Reset() {
	*x = ListUserCitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserCitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserCitiesRequest) ProtoMessage() {}

func (x *ListUserCitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserCitiesRequest.ProtoReflect.Descriptor instead.
func (*ListUserCitiesRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{12}
}

func (x *ListUserCitiesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUserCitiesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取用户端城市列表响应
type ListUserCitiesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	Items []*UserCityInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`  // 城市列表
}

func (x *ListUserCitiesReply) Reset() {
	*x = ListUserCitiesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserCitiesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserCitiesReply) ProtoMessage() {}

func (x *ListUserCitiesReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserCitiesReply.ProtoReflect.Descriptor instead.
func (*ListUserCitiesReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{13}
}

func (x *ListUserCitiesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserCitiesReply) GetItems() []*UserCityInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

// 搜索城市请求
type SearchCitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword  string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`                    // 搜索关键词
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
}

func (x *SearchCitiesRequest) Reset() {
	*x = SearchCitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCitiesRequest) ProtoMessage() {}

func (x *SearchCitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCitiesRequest.ProtoReflect.Descriptor instead.
func (*SearchCitiesRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{14}
}

func (x *SearchCitiesRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchCitiesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCitiesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 搜索城市响应
type SearchCitiesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	Items []*UserCityInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`  // 城市列表
}

func (x *SearchCitiesReply) Reset() {
	*x = SearchCitiesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCitiesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCitiesReply) ProtoMessage() {}

func (x *SearchCitiesReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCitiesReply.ProtoReflect.Descriptor instead.
func (*SearchCitiesReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{15}
}

func (x *SearchCitiesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchCitiesReply) GetItems() []*UserCityInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

// 获取用户端城市详情请求
type GetUserCityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 城市ID
}

func (x *GetUserCityRequest) Reset() {
	*x = GetUserCityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCityRequest) ProtoMessage() {}

func (x *GetUserCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCityRequest.ProtoReflect.Descriptor instead.
func (*GetUserCityRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserCityRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取用户端城市详情响应
type GetUserCityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // 城市ID
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 城市名称
	Code      string  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`             // 城市编码
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 纬度
	Longitude float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
}

func (x *GetUserCityReply) Reset() {
	*x = GetUserCityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCityReply) ProtoMessage() {}

func (x *GetUserCityReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCityReply.ProtoReflect.Descriptor instead.
func (*GetUserCityReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserCityReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserCityReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserCityReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetUserCityReply) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetUserCityReply) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// 根据城市编码获取城市请求
type GetCityByCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // 城市编码
}

func (x *GetCityByCodeRequest) Reset() {
	*x = GetCityByCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCityByCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityByCodeRequest) ProtoMessage() {}

func (x *GetCityByCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityByCodeRequest.ProtoReflect.Descriptor instead.
func (*GetCityByCodeRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{18}
}

func (x *GetCityByCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 获取热门城市请求
type GetHotCitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // 返回数量限制，默认为10
}

func (x *GetHotCitiesRequest) Reset() {
	*x = GetHotCitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotCitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotCitiesRequest) ProtoMessage() {}

func (x *GetHotCitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotCitiesRequest.ProtoReflect.Descriptor instead.
func (*GetHotCitiesRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{19}
}

func (x *GetHotCitiesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 错误响应
type ErrorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 错误码
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息
}

func (x *ErrorReply) Reset() {
	*x = ErrorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_v1_city_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorReply) ProtoMessage() {}

func (x *ErrorReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_city_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorReply.ProtoReflect.Descriptor instead.
func (*ErrorReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_city_proto_rawDescGZIP(), []int{20}
}

func (x *ErrorReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_helloworld_v1_city_proto protoreflect.FileDescriptor

var file_helloworld_v1_city_proto_rawDesc = []byte{
	0x0a, 0x18, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x4f, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x20,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x98, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x08,
	0x43, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x5c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x5a, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x31, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x48, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x62, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x60, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x60, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x84, 0x01,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x2b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3a, 0x0a,
	0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x8c, 0x01, 0x0a, 0x0b, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45,
	0xf4, 0x03, 0x12, 0x15, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45, 0x90, 0x03, 0x12, 0x18, 0x0a, 0x0e, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x1a, 0x04, 0xa8,
	0x45, 0xf4, 0x03, 0x12, 0x13, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x03, 0x1a, 0x04, 0xa8, 0x45, 0x94, 0x03, 0x12, 0x18, 0x0a, 0x0e, 0x41, 0x4c, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x04, 0x1a, 0x04, 0xa8, 0x45,
	0x99, 0x03, 0x1a, 0x04, 0xa0, 0x45, 0xf4, 0x03, 0x32, 0xcf, 0x09, 0x0a, 0x04, 0x43, 0x69, 0x74,
	0x79, 0x12, 0x74, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x79, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x1a, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x12, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x71, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x92, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x32, 0x1d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x77, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x78, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x73, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12,
	0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x7e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x42, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x7b, 0x63, 0x6f, 0x64, 0x65,
	0x7d, 0x12, 0x77, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x43, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x68, 0x6f, 0x74, 0x42, 0x37, 0x0a, 0x11, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x50,
	0x01, 0x5a, 0x20, 0x69, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_helloworld_v1_city_proto_rawDescOnce sync.Once
	file_helloworld_v1_city_proto_rawDescData = file_helloworld_v1_city_proto_rawDesc
)

func file_helloworld_v1_city_proto_rawDescGZIP() []byte {
	file_helloworld_v1_city_proto_rawDescOnce.Do(func() {
		file_helloworld_v1_city_proto_rawDescData = protoimpl.X.CompressGZIP(file_helloworld_v1_city_proto_rawDescData)
	})
	return file_helloworld_v1_city_proto_rawDescData
}

var file_helloworld_v1_city_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_helloworld_v1_city_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_helloworld_v1_city_proto_goTypes = []any{
	(ErrorReason)(0),                // 0: api.helloworld.v1.ErrorReason
	(*CreateCityRequest)(nil),       // 1: api.helloworld.v1.CreateCityRequest
	(*CreateCityReply)(nil),         // 2: api.helloworld.v1.CreateCityReply
	(*UpdateCityRequest)(nil),       // 3: api.helloworld.v1.UpdateCityRequest
	(*UpdateCityReply)(nil),         // 4: api.helloworld.v1.UpdateCityReply
	(*GetCityRequest)(nil),          // 5: api.helloworld.v1.GetCityRequest
	(*GetCityReply)(nil),            // 6: api.helloworld.v1.GetCityReply
	(*CityInfo)(nil),                // 7: api.helloworld.v1.CityInfo
	(*ListCitiesRequest)(nil),       // 8: api.helloworld.v1.ListCitiesRequest
	(*ListCitiesReply)(nil),         // 9: api.helloworld.v1.ListCitiesReply
	(*UpdateCityStatusRequest)(nil), // 10: api.helloworld.v1.UpdateCityStatusRequest
	(*UpdateCityStatusReply)(nil),   // 11: api.helloworld.v1.UpdateCityStatusReply
	(*UserCityInfo)(nil),            // 12: api.helloworld.v1.UserCityInfo
	(*ListUserCitiesRequest)(nil),   // 13: api.helloworld.v1.ListUserCitiesRequest
	(*ListUserCitiesReply)(nil),     // 14: api.helloworld.v1.ListUserCitiesReply
	(*SearchCitiesRequest)(nil),     // 15: api.helloworld.v1.SearchCitiesRequest
	(*SearchCitiesReply)(nil),       // 16: api.helloworld.v1.SearchCitiesReply
	(*GetUserCityRequest)(nil),      // 17: api.helloworld.v1.GetUserCityRequest
	(*GetUserCityReply)(nil),        // 18: api.helloworld.v1.GetUserCityReply
	(*GetCityByCodeRequest)(nil),    // 19: api.helloworld.v1.GetCityByCodeRequest
	(*GetHotCitiesRequest)(nil),     // 20: api.helloworld.v1.GetHotCitiesRequest
	(*ErrorReply)(nil),              // 21: api.helloworld.v1.ErrorReply
}
var file_helloworld_v1_city_proto_depIdxs = []int32{
	7,  // 0: api.helloworld.v1.ListCitiesReply.items:type_name -> api.helloworld.v1.CityInfo
	12, // 1: api.helloworld.v1.ListUserCitiesReply.items:type_name -> api.helloworld.v1.UserCityInfo
	12, // 2: api.helloworld.v1.SearchCitiesReply.items:type_name -> api.helloworld.v1.UserCityInfo
	1,  // 3: api.helloworld.v1.City.CreateCity:input_type -> api.helloworld.v1.CreateCityRequest
	3,  // 4: api.helloworld.v1.City.UpdateCity:input_type -> api.helloworld.v1.UpdateCityRequest
	5,  // 5: api.helloworld.v1.City.GetCity:input_type -> api.helloworld.v1.GetCityRequest
	8,  // 6: api.helloworld.v1.City.ListCities:input_type -> api.helloworld.v1.ListCitiesRequest
	10, // 7: api.helloworld.v1.City.UpdateCityStatus:input_type -> api.helloworld.v1.UpdateCityStatusRequest
	13, // 8: api.helloworld.v1.City.ListUserCities:input_type -> api.helloworld.v1.ListUserCitiesRequest
	15, // 9: api.helloworld.v1.City.SearchCities:input_type -> api.helloworld.v1.SearchCitiesRequest
	17, // 10: api.helloworld.v1.City.GetUserCity:input_type -> api.helloworld.v1.GetUserCityRequest
	19, // 11: api.helloworld.v1.City.GetCityByCode:input_type -> api.helloworld.v1.GetCityByCodeRequest
	20, // 12: api.helloworld.v1.City.GetHotCities:input_type -> api.helloworld.v1.GetHotCitiesRequest
	2,  // 13: api.helloworld.v1.City.CreateCity:output_type -> api.helloworld.v1.CreateCityReply
	4,  // 14: api.helloworld.v1.City.UpdateCity:output_type -> api.helloworld.v1.UpdateCityReply
	6,  // 15: api.helloworld.v1.City.GetCity:output_type -> api.helloworld.v1.GetCityReply
	9,  // 16: api.helloworld.v1.City.ListCities:output_type -> api.helloworld.v1.ListCitiesReply
	11, // 17: api.helloworld.v1.City.UpdateCityStatus:output_type -> api.helloworld.v1.UpdateCityStatusReply
	14, // 18: api.helloworld.v1.City.ListUserCities:output_type -> api.helloworld.v1.ListUserCitiesReply
	16, // 19: api.helloworld.v1.City.SearchCities:output_type -> api.helloworld.v1.SearchCitiesReply
	18, // 20: api.helloworld.v1.City.GetUserCity:output_type -> api.helloworld.v1.GetUserCityReply
	18, // 21: api.helloworld.v1.City.GetCityByCode:output_type -> api.helloworld.v1.GetUserCityReply
	14, // 22: api.helloworld.v1.City.GetHotCities:output_type -> api.helloworld.v1.ListUserCitiesReply
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_helloworld_v1_city_proto_init() }
func file_helloworld_v1_city_proto_init() {
	if File_helloworld_v1_city_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_helloworld_v1_city_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetCityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetCityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListCitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListCitiesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCityStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCityStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UserCityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListUserCitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ListUserCitiesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SearchCitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SearchCitiesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserCityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserCityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetCityByCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetHotCitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_v1_city_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_helloworld_v1_city_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helloworld_v1_city_proto_goTypes,
		DependencyIndexes: file_helloworld_v1_city_proto_depIdxs,
		EnumInfos:         file_helloworld_v1_city_proto_enumTypes,
		MessageInfos:      file_helloworld_v1_city_proto_msgTypes,
	}.Build()
	File_helloworld_v1_city_proto = out.File
	file_helloworld_v1_city_proto_rawDesc = nil
	file_helloworld_v1_city_proto_goTypes = nil
	file_helloworld_v1_city_proto_depIdxs = nil
}
