// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: api/helloworld/v1/cell.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 柜口信息
type CabinetCellInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                 // 格口ID
	CabinetGroupId int32                  `protobuf:"varint,2,opt,name=cabinet_group_id,json=cabinetGroupId,proto3" json:"cabinet_group_id,omitempty"` // 所属柜组ID
	CellNo         int32                  `protobuf:"varint,3,opt,name=cell_no,json=cellNo,proto3" json:"cell_no,omitempty"`                           // 格口编号
	CellSize       string                 `protobuf:"bytes,4,opt,name=cell_size,json=cellSize,proto3" json:"cell_size,omitempty"`                      // 格口大小：small-小、medium-中、large-大
	Status         string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                          // 格口状态：normal-正常、inUse-使用中、abnormal-异常、disabled-禁用、damaged-损坏
	LastOpenTime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_open_time,json=lastOpenTime,proto3" json:"last_open_time,omitempty"`        // 最后开启时间
	CreateTime     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                // 创建时间
	UpdateTime     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                // 更新时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CabinetCellInfo) Reset() {
	*x = CabinetCellInfo{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CabinetCellInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetCellInfo) ProtoMessage() {}

func (x *CabinetCellInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetCellInfo.ProtoReflect.Descriptor instead.
func (*CabinetCellInfo) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{0}
}

func (x *CabinetCellInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CabinetCellInfo) GetCabinetGroupId() int32 {
	if x != nil {
		return x.CabinetGroupId
	}
	return 0
}

func (x *CabinetCellInfo) GetCellNo() int32 {
	if x != nil {
		return x.CellNo
	}
	return 0
}

func (x *CabinetCellInfo) GetCellSize() string {
	if x != nil {
		return x.CellSize
	}
	return ""
}

func (x *CabinetCellInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CabinetCellInfo) GetLastOpenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastOpenTime
	}
	return nil
}

func (x *CabinetCellInfo) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *CabinetCellInfo) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// 创建柜口请求
type CreateCabinetCellRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CabinetGroupId int32                  `protobuf:"varint,1,opt,name=cabinet_group_id,json=cabinetGroupId,proto3" json:"cabinet_group_id,omitempty"` // 所属柜组ID
	CellNo         int32                  `protobuf:"varint,2,opt,name=cell_no,json=cellNo,proto3" json:"cell_no,omitempty"`                           // 格口编号
	CellSize       string                 `protobuf:"bytes,3,opt,name=cell_size,json=cellSize,proto3" json:"cell_size,omitempty"`                      // 格口大小
	Status         string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                          // 格口状态
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateCabinetCellRequest) Reset() {
	*x = CreateCabinetCellRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCabinetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCabinetCellRequest) ProtoMessage() {}

func (x *CreateCabinetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCabinetCellRequest.ProtoReflect.Descriptor instead.
func (*CreateCabinetCellRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCabinetCellRequest) GetCabinetGroupId() int32 {
	if x != nil {
		return x.CabinetGroupId
	}
	return 0
}

func (x *CreateCabinetCellRequest) GetCellNo() int32 {
	if x != nil {
		return x.CellNo
	}
	return 0
}

func (x *CreateCabinetCellRequest) GetCellSize() string {
	if x != nil {
		return x.CellSize
	}
	return ""
}

func (x *CreateCabinetCellRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 创建柜口响应
type CreateCabinetCellReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                        // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                           // 响应消息
	CellId        int32                  `protobuf:"varint,3,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`      // 创建的柜口ID
	CellInfo      *CabinetCellInfo       `protobuf:"bytes,4,opt,name=cell_info,json=cellInfo,proto3" json:"cell_info,omitempty"` // 柜口信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCabinetCellReply) Reset() {
	*x = CreateCabinetCellReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCabinetCellReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCabinetCellReply) ProtoMessage() {}

func (x *CreateCabinetCellReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCabinetCellReply.ProtoReflect.Descriptor instead.
func (*CreateCabinetCellReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCabinetCellReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateCabinetCellReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateCabinetCellReply) GetCellId() int32 {
	if x != nil {
		return x.CellId
	}
	return 0
}

func (x *CreateCabinetCellReply) GetCellInfo() *CabinetCellInfo {
	if x != nil {
		return x.CellInfo
	}
	return nil
}

// 更新柜口请求
type UpdateCabinetCellRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                 // 柜口ID
	CabinetGroupId int32                  `protobuf:"varint,2,opt,name=cabinet_group_id,json=cabinetGroupId,proto3" json:"cabinet_group_id,omitempty"` // 所属柜组ID
	CellNo         int32                  `protobuf:"varint,3,opt,name=cell_no,json=cellNo,proto3" json:"cell_no,omitempty"`                           // 格口编号
	CellSize       string                 `protobuf:"bytes,4,opt,name=cell_size,json=cellSize,proto3" json:"cell_size,omitempty"`                      // 格口大小
	Status         string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                          // 格口状态
	LastOpenTime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_open_time,json=lastOpenTime,proto3" json:"last_open_time,omitempty"`        // 最后开启时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateCabinetCellRequest) Reset() {
	*x = UpdateCabinetCellRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCabinetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCabinetCellRequest) ProtoMessage() {}

func (x *UpdateCabinetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCabinetCellRequest.ProtoReflect.Descriptor instead.
func (*UpdateCabinetCellRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCabinetCellRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCabinetCellRequest) GetCabinetGroupId() int32 {
	if x != nil {
		return x.CabinetGroupId
	}
	return 0
}

func (x *UpdateCabinetCellRequest) GetCellNo() int32 {
	if x != nil {
		return x.CellNo
	}
	return 0
}

func (x *UpdateCabinetCellRequest) GetCellSize() string {
	if x != nil {
		return x.CellSize
	}
	return ""
}

func (x *UpdateCabinetCellRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateCabinetCellRequest) GetLastOpenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastOpenTime
	}
	return nil
}

// 更新柜口响应
type UpdateCabinetCellReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                        // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                           // 响应消息
	CellInfo      *CabinetCellInfo       `protobuf:"bytes,3,opt,name=cell_info,json=cellInfo,proto3" json:"cell_info,omitempty"` // 更新后的柜口信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCabinetCellReply) Reset() {
	*x = UpdateCabinetCellReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCabinetCellReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCabinetCellReply) ProtoMessage() {}

func (x *UpdateCabinetCellReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCabinetCellReply.ProtoReflect.Descriptor instead.
func (*UpdateCabinetCellReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCabinetCellReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateCabinetCellReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateCabinetCellReply) GetCellInfo() *CabinetCellInfo {
	if x != nil {
		return x.CellInfo
	}
	return nil
}

// 删除柜口请求
type DeleteCabinetCellRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 柜口ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCabinetCellRequest) Reset() {
	*x = DeleteCabinetCellRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCabinetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCabinetCellRequest) ProtoMessage() {}

func (x *DeleteCabinetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCabinetCellRequest.ProtoReflect.Descriptor instead.
func (*DeleteCabinetCellRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCabinetCellRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除柜口响应
type DeleteCabinetCellReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`       // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`          // 响应消息
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"` // 删除是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCabinetCellReply) Reset() {
	*x = DeleteCabinetCellReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCabinetCellReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCabinetCellReply) ProtoMessage() {}

func (x *DeleteCabinetCellReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCabinetCellReply.ProtoReflect.Descriptor instead.
func (*DeleteCabinetCellReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCabinetCellReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteCabinetCellReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteCabinetCellReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 获取柜口请求
type GetCabinetCellRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 柜口ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCabinetCellRequest) Reset() {
	*x = GetCabinetCellRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCabinetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCabinetCellRequest) ProtoMessage() {}

func (x *GetCabinetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCabinetCellRequest.ProtoReflect.Descriptor instead.
func (*GetCabinetCellRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{7}
}

func (x *GetCabinetCellRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取柜口响应
type GetCabinetCellReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                        // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                           // 响应消息
	CellInfo      *CabinetCellInfo       `protobuf:"bytes,3,opt,name=cell_info,json=cellInfo,proto3" json:"cell_info,omitempty"` // 柜口信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCabinetCellReply) Reset() {
	*x = GetCabinetCellReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCabinetCellReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCabinetCellReply) ProtoMessage() {}

func (x *GetCabinetCellReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCabinetCellReply.ProtoReflect.Descriptor instead.
func (*GetCabinetCellReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{8}
}

func (x *GetCabinetCellReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCabinetCellReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCabinetCellReply) GetCellInfo() *CabinetCellInfo {
	if x != nil {
		return x.CellInfo
	}
	return nil
}

// 柜口列表请求
type ListCabinetCellsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Page           int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                                             // 页码
	Size           int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`                                             // 每页数量
	CabinetGroupId int32                  `protobuf:"varint,3,opt,name=cabinet_group_id,json=cabinetGroupId,proto3" json:"cabinet_group_id,omitempty"` // 柜组ID过滤
	Status         string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                          // 状态过滤
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListCabinetCellsRequest) Reset() {
	*x = ListCabinetCellsRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCabinetCellsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCabinetCellsRequest) ProtoMessage() {}

func (x *ListCabinetCellsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCabinetCellsRequest.ProtoReflect.Descriptor instead.
func (*ListCabinetCellsRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{9}
}

func (x *ListCabinetCellsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCabinetCellsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListCabinetCellsRequest) GetCabinetGroupId() int32 {
	if x != nil {
		return x.CabinetGroupId
	}
	return 0
}

func (x *ListCabinetCellsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 柜口列表响应
type ListCabinetCellsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`   // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`      // 响应消息
	Cells         []*CabinetCellInfo     `protobuf:"bytes,3,rep,name=cells,proto3" json:"cells,omitempty"`  // 柜口列表
	Total         int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"` // 总数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCabinetCellsReply) Reset() {
	*x = ListCabinetCellsReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCabinetCellsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCabinetCellsReply) ProtoMessage() {}

func (x *ListCabinetCellsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCabinetCellsReply.ProtoReflect.Descriptor instead.
func (*ListCabinetCellsReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{10}
}

func (x *ListCabinetCellsReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListCabinetCellsReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListCabinetCellsReply) GetCells() []*CabinetCellInfo {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *ListCabinetCellsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 搜索柜口请求
type SearchCabinetCellsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Keyword        string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`                                        // 搜索关键词（格口编号、状态、大小）
	CabinetGroupId int32                  `protobuf:"varint,2,opt,name=cabinet_group_id,json=cabinetGroupId,proto3" json:"cabinet_group_id,omitempty"` // 柜组ID过滤
	Page           int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                                             // 页码
	Size           int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                                             // 每页数量
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchCabinetCellsRequest) Reset() {
	*x = SearchCabinetCellsRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCabinetCellsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCabinetCellsRequest) ProtoMessage() {}

func (x *SearchCabinetCellsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCabinetCellsRequest.ProtoReflect.Descriptor instead.
func (*SearchCabinetCellsRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{11}
}

func (x *SearchCabinetCellsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchCabinetCellsRequest) GetCabinetGroupId() int32 {
	if x != nil {
		return x.CabinetGroupId
	}
	return 0
}

func (x *SearchCabinetCellsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCabinetCellsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 搜索柜口响应
type SearchCabinetCellsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`   // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`      // 响应消息
	Cells         []*CabinetCellInfo     `protobuf:"bytes,3,rep,name=cells,proto3" json:"cells,omitempty"`  // 搜索结果
	Total         int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"` // 总数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCabinetCellsReply) Reset() {
	*x = SearchCabinetCellsReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCabinetCellsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCabinetCellsReply) ProtoMessage() {}

func (x *SearchCabinetCellsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCabinetCellsReply.ProtoReflect.Descriptor instead.
func (*SearchCabinetCellsReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{12}
}

func (x *SearchCabinetCellsReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchCabinetCellsReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchCabinetCellsReply) GetCells() []*CabinetCellInfo {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *SearchCabinetCellsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 根据柜组获取所有柜口请求
type GetCabinetCellsByGroupRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CabinetGroupId int32                  `protobuf:"varint,1,opt,name=cabinet_group_id,json=cabinetGroupId,proto3" json:"cabinet_group_id,omitempty"` // 柜组ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetCabinetCellsByGroupRequest) Reset() {
	*x = GetCabinetCellsByGroupRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCabinetCellsByGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCabinetCellsByGroupRequest) ProtoMessage() {}

func (x *GetCabinetCellsByGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCabinetCellsByGroupRequest.ProtoReflect.Descriptor instead.
func (*GetCabinetCellsByGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{13}
}

func (x *GetCabinetCellsByGroupRequest) GetCabinetGroupId() int32 {
	if x != nil {
		return x.CabinetGroupId
	}
	return 0
}

// 根据柜组获取所有柜口响应
type GetCabinetCellsByGroupReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`   // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`      // 响应消息
	Cells         []*CabinetCellInfo     `protobuf:"bytes,3,rep,name=cells,proto3" json:"cells,omitempty"`  // 柜口列表
	Total         int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"` // 总数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCabinetCellsByGroupReply) Reset() {
	*x = GetCabinetCellsByGroupReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCabinetCellsByGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCabinetCellsByGroupReply) ProtoMessage() {}

func (x *GetCabinetCellsByGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCabinetCellsByGroupReply.ProtoReflect.Descriptor instead.
func (*GetCabinetCellsByGroupReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{14}
}

func (x *GetCabinetCellsByGroupReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCabinetCellsByGroupReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCabinetCellsByGroupReply) GetCells() []*CabinetCellInfo {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *GetCabinetCellsByGroupReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 批量创建柜口请求
type BatchCreateCabinetCellsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CabinetGroupId int32                  `protobuf:"varint,1,opt,name=cabinet_group_id,json=cabinetGroupId,proto3" json:"cabinet_group_id,omitempty"` // 柜组ID
	StartNo        int32                  `protobuf:"varint,2,opt,name=start_no,json=startNo,proto3" json:"start_no,omitempty"`                        // 起始编号
	EndNo          int32                  `protobuf:"varint,3,opt,name=end_no,json=endNo,proto3" json:"end_no,omitempty"`                              // 结束编号
	CellSize       string                 `protobuf:"bytes,4,opt,name=cell_size,json=cellSize,proto3" json:"cell_size,omitempty"`                      // 格口大小
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchCreateCabinetCellsRequest) Reset() {
	*x = BatchCreateCabinetCellsRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateCabinetCellsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateCabinetCellsRequest) ProtoMessage() {}

func (x *BatchCreateCabinetCellsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateCabinetCellsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateCabinetCellsRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{15}
}

func (x *BatchCreateCabinetCellsRequest) GetCabinetGroupId() int32 {
	if x != nil {
		return x.CabinetGroupId
	}
	return 0
}

func (x *BatchCreateCabinetCellsRequest) GetStartNo() int32 {
	if x != nil {
		return x.StartNo
	}
	return 0
}

func (x *BatchCreateCabinetCellsRequest) GetEndNo() int32 {
	if x != nil {
		return x.EndNo
	}
	return 0
}

func (x *BatchCreateCabinetCellsRequest) GetCellSize() string {
	if x != nil {
		return x.CellSize
	}
	return ""
}

// 批量创建柜口响应
type BatchCreateCabinetCellsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`       // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`          // 响应消息
	Count         int32                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`     // 创建数量
	Success       bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateCabinetCellsReply) Reset() {
	*x = BatchCreateCabinetCellsReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateCabinetCellsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateCabinetCellsReply) ProtoMessage() {}

func (x *BatchCreateCabinetCellsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateCabinetCellsReply.ProtoReflect.Descriptor instead.
func (*BatchCreateCabinetCellsReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{16}
}

func (x *BatchCreateCabinetCellsReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchCreateCabinetCellsReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BatchCreateCabinetCellsReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BatchCreateCabinetCellsReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 开启柜口请求
type OpenCabinetCellRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 柜口ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenCabinetCellRequest) Reset() {
	*x = OpenCabinetCellRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenCabinetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenCabinetCellRequest) ProtoMessage() {}

func (x *OpenCabinetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenCabinetCellRequest.ProtoReflect.Descriptor instead.
func (*OpenCabinetCellRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{17}
}

func (x *OpenCabinetCellRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 开启柜口响应
type OpenCabinetCellReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`       // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`          // 响应消息
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenCabinetCellReply) Reset() {
	*x = OpenCabinetCellReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenCabinetCellReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenCabinetCellReply) ProtoMessage() {}

func (x *OpenCabinetCellReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenCabinetCellReply.ProtoReflect.Descriptor instead.
func (*OpenCabinetCellReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{18}
}

func (x *OpenCabinetCellReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpenCabinetCellReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OpenCabinetCellReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 关闭柜口请求
type CloseCabinetCellRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 柜口ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseCabinetCellRequest) Reset() {
	*x = CloseCabinetCellRequest{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseCabinetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseCabinetCellRequest) ProtoMessage() {}

func (x *CloseCabinetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseCabinetCellRequest.ProtoReflect.Descriptor instead.
func (*CloseCabinetCellRequest) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{19}
}

func (x *CloseCabinetCellRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 关闭柜口响应
type CloseCabinetCellReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`       // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`          // 响应消息
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseCabinetCellReply) Reset() {
	*x = CloseCabinetCellReply{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseCabinetCellReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseCabinetCellReply) ProtoMessage() {}

func (x *CloseCabinetCellReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseCabinetCellReply.ProtoReflect.Descriptor instead.
func (*CloseCabinetCellReply) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{20}
}

func (x *CloseCabinetCellReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CloseCabinetCellReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CloseCabinetCellReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CellStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CellStatusReq) Reset() {
	*x = CellStatusReq{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CellStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellStatusReq) ProtoMessage() {}

func (x *CellStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellStatusReq.ProtoReflect.Descriptor instead.
func (*CellStatusReq) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{21}
}

func (x *CellStatusReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CellStatusRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"` //	repeated CellStatus list = 3;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CellStatusRes) Reset() {
	*x = CellStatusRes{}
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CellStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellStatusRes) ProtoMessage() {}

func (x *CellStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_helloworld_v1_cell_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellStatusRes.ProtoReflect.Descriptor instead.
func (*CellStatusRes) Descriptor() ([]byte, []int) {
	return file_api_helloworld_v1_cell_proto_rawDescGZIP(), []int{22}
}

func (x *CellStatusRes) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CellStatusRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_api_helloworld_v1_cell_proto protoreflect.FileDescriptor

const file_api_helloworld_v1_cell_proto_rawDesc = "" +
	"\n" +
	"\x1capi/helloworld/v1/cell.proto\x12\x11api.helloworld.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd5\x02\n" +
	"\x0fCabinetCellInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12(\n" +
	"\x10cabinet_group_id\x18\x02 \x01(\x05R\x0ecabinetGroupId\x12\x17\n" +
	"\acell_no\x18\x03 \x01(\x05R\x06cellNo\x12\x1b\n" +
	"\tcell_size\x18\x04 \x01(\tR\bcellSize\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12@\n" +
	"\x0elast_open_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastOpenTime\x12;\n" +
	"\vcreate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\"\x92\x01\n" +
	"\x18CreateCabinetCellRequest\x12(\n" +
	"\x10cabinet_group_id\x18\x01 \x01(\x05R\x0ecabinetGroupId\x12\x17\n" +
	"\acell_no\x18\x02 \x01(\x05R\x06cellNo\x12\x1b\n" +
	"\tcell_size\x18\x03 \x01(\tR\bcellSize\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\x98\x01\n" +
	"\x16CreateCabinetCellReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x17\n" +
	"\acell_id\x18\x03 \x01(\x05R\x06cellId\x12?\n" +
	"\tcell_info\x18\x04 \x01(\v2\".api.helloworld.v1.CabinetCellInfoR\bcellInfo\"\xe4\x01\n" +
	"\x18UpdateCabinetCellRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12(\n" +
	"\x10cabinet_group_id\x18\x02 \x01(\x05R\x0ecabinetGroupId\x12\x17\n" +
	"\acell_no\x18\x03 \x01(\x05R\x06cellNo\x12\x1b\n" +
	"\tcell_size\x18\x04 \x01(\tR\bcellSize\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12@\n" +
	"\x0elast_open_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastOpenTime\"\x7f\n" +
	"\x16UpdateCabinetCellReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12?\n" +
	"\tcell_info\x18\x03 \x01(\v2\".api.helloworld.v1.CabinetCellInfoR\bcellInfo\"*\n" +
	"\x18DeleteCabinetCellRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"X\n" +
	"\x16DeleteCabinetCellReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\"'\n" +
	"\x15GetCabinetCellRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"|\n" +
	"\x13GetCabinetCellReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12?\n" +
	"\tcell_info\x18\x03 \x01(\v2\".api.helloworld.v1.CabinetCellInfoR\bcellInfo\"\x83\x01\n" +
	"\x17ListCabinetCellsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12(\n" +
	"\x10cabinet_group_id\x18\x03 \x01(\x05R\x0ecabinetGroupId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\x8d\x01\n" +
	"\x15ListCabinetCellsReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x128\n" +
	"\x05cells\x18\x03 \x03(\v2\".api.helloworld.v1.CabinetCellInfoR\x05cells\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\"\x87\x01\n" +
	"\x19SearchCabinetCellsRequest\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12(\n" +
	"\x10cabinet_group_id\x18\x02 \x01(\x05R\x0ecabinetGroupId\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x03R\x04page\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\"\x8f\x01\n" +
	"\x17SearchCabinetCellsReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x128\n" +
	"\x05cells\x18\x03 \x03(\v2\".api.helloworld.v1.CabinetCellInfoR\x05cells\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\"I\n" +
	"\x1dGetCabinetCellsByGroupRequest\x12(\n" +
	"\x10cabinet_group_id\x18\x01 \x01(\x05R\x0ecabinetGroupId\"\x93\x01\n" +
	"\x1bGetCabinetCellsByGroupReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x128\n" +
	"\x05cells\x18\x03 \x03(\v2\".api.helloworld.v1.CabinetCellInfoR\x05cells\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\"\x99\x01\n" +
	"\x1eBatchCreateCabinetCellsRequest\x12(\n" +
	"\x10cabinet_group_id\x18\x01 \x01(\x05R\x0ecabinetGroupId\x12\x19\n" +
	"\bstart_no\x18\x02 \x01(\x05R\astartNo\x12\x15\n" +
	"\x06end_no\x18\x03 \x01(\x05R\x05endNo\x12\x1b\n" +
	"\tcell_size\x18\x04 \x01(\tR\bcellSize\"t\n" +
	"\x1cBatchCreateCabinetCellsReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x05R\x05count\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\"(\n" +
	"\x16OpenCabinetCellRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"V\n" +
	"\x14OpenCabinetCellReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\")\n" +
	"\x17CloseCabinetCellRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"W\n" +
	"\x15CloseCabinetCellReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\"'\n" +
	"\rCellStatusReq\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"5\n" +
	"\rCellStatusRes\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg2\xaf\f\n" +
	"\vCabinetCell\x12c\n" +
	"\n" +
	"CellStatus\x12 .api.helloworld.v1.CellStatusReq\x1a .api.helloworld.v1.CellStatusRes\"\x11\x82\xd3\xe4\x93\x02\v:\x01*\"\x06status\x12\x8f\x01\n" +
	"\x11CreateCabinetCell\x12+.api.helloworld.v1.CreateCabinetCellRequest\x1a).api.helloworld.v1.CreateCabinetCellReply\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/cabinet-cell/create\x12\x8f\x01\n" +
	"\x11UpdateCabinetCell\x12+.api.helloworld.v1.UpdateCabinetCellRequest\x1a).api.helloworld.v1.UpdateCabinetCellReply\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\x1a\x17/v1/cabinet-cell/update\x12\x8f\x01\n" +
	"\x11DeleteCabinetCell\x12+.api.helloworld.v1.DeleteCabinetCellRequest\x1a).api.helloworld.v1.DeleteCabinetCellReply\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/cabinet-cell/delete\x12\x80\x01\n" +
	"\x0eGetCabinetCell\x12(.api.helloworld.v1.GetCabinetCellRequest\x1a&.api.helloworld.v1.GetCabinetCellReply\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/cabinet-cell/get\x12\x8a\x01\n" +
	"\x10ListCabinetCells\x12*.api.helloworld.v1.ListCabinetCellsRequest\x1a(.api.helloworld.v1.ListCabinetCellsReply\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/cabinet-cell/list\x12\x92\x01\n" +
	"\x12SearchCabinetCells\x12,.api.helloworld.v1.SearchCabinetCellsRequest\x1a*.api.helloworld.v1.SearchCabinetCellsReply\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/cabinet-cell/search\x12\x9d\x01\n" +
	"\x16GetCabinetCellsByGroup\x120.api.helloworld.v1.GetCabinetCellsByGroupRequest\x1a..api.helloworld.v1.GetCabinetCellsByGroupReply\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/cabinet-cell/by-group\x12\xa7\x01\n" +
	"\x17BatchCreateCabinetCells\x121.api.helloworld.v1.BatchCreateCabinetCellsRequest\x1a/.api.helloworld.v1.BatchCreateCabinetCellsReply\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/v1/cabinet-cell/batch-create\x12\x87\x01\n" +
	"\x0fOpenCabinetCell\x12).api.helloworld.v1.OpenCabinetCellRequest\x1a'.api.helloworld.v1.OpenCabinetCellReply\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/cabinet-cell/open\x12\x8b\x01\n" +
	"\x10CloseCabinetCell\x12*.api.helloworld.v1.CloseCabinetCellRequest\x1a(.api.helloworld.v1.CloseCabinetCellReply\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/cabinet-cell/closeB7\n" +
	"\x11api.helloworld.v1P\x01Z ito-deposit/api/helloworld/v1;v1b\x06proto3"

var (
	file_api_helloworld_v1_cell_proto_rawDescOnce sync.Once
	file_api_helloworld_v1_cell_proto_rawDescData []byte
)

func file_api_helloworld_v1_cell_proto_rawDescGZIP() []byte {
	file_api_helloworld_v1_cell_proto_rawDescOnce.Do(func() {
		file_api_helloworld_v1_cell_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_helloworld_v1_cell_proto_rawDesc), len(file_api_helloworld_v1_cell_proto_rawDesc)))
	})
	return file_api_helloworld_v1_cell_proto_rawDescData
}

var file_api_helloworld_v1_cell_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_helloworld_v1_cell_proto_goTypes = []any{
	(*CabinetCellInfo)(nil),                // 0: api.helloworld.v1.CabinetCellInfo
	(*CreateCabinetCellRequest)(nil),       // 1: api.helloworld.v1.CreateCabinetCellRequest
	(*CreateCabinetCellReply)(nil),         // 2: api.helloworld.v1.CreateCabinetCellReply
	(*UpdateCabinetCellRequest)(nil),       // 3: api.helloworld.v1.UpdateCabinetCellRequest
	(*UpdateCabinetCellReply)(nil),         // 4: api.helloworld.v1.UpdateCabinetCellReply
	(*DeleteCabinetCellRequest)(nil),       // 5: api.helloworld.v1.DeleteCabinetCellRequest
	(*DeleteCabinetCellReply)(nil),         // 6: api.helloworld.v1.DeleteCabinetCellReply
	(*GetCabinetCellRequest)(nil),          // 7: api.helloworld.v1.GetCabinetCellRequest
	(*GetCabinetCellReply)(nil),            // 8: api.helloworld.v1.GetCabinetCellReply
	(*ListCabinetCellsRequest)(nil),        // 9: api.helloworld.v1.ListCabinetCellsRequest
	(*ListCabinetCellsReply)(nil),          // 10: api.helloworld.v1.ListCabinetCellsReply
	(*SearchCabinetCellsRequest)(nil),      // 11: api.helloworld.v1.SearchCabinetCellsRequest
	(*SearchCabinetCellsReply)(nil),        // 12: api.helloworld.v1.SearchCabinetCellsReply
	(*GetCabinetCellsByGroupRequest)(nil),  // 13: api.helloworld.v1.GetCabinetCellsByGroupRequest
	(*GetCabinetCellsByGroupReply)(nil),    // 14: api.helloworld.v1.GetCabinetCellsByGroupReply
	(*BatchCreateCabinetCellsRequest)(nil), // 15: api.helloworld.v1.BatchCreateCabinetCellsRequest
	(*BatchCreateCabinetCellsReply)(nil),   // 16: api.helloworld.v1.BatchCreateCabinetCellsReply
	(*OpenCabinetCellRequest)(nil),         // 17: api.helloworld.v1.OpenCabinetCellRequest
	(*OpenCabinetCellReply)(nil),           // 18: api.helloworld.v1.OpenCabinetCellReply
	(*CloseCabinetCellRequest)(nil),        // 19: api.helloworld.v1.CloseCabinetCellRequest
	(*CloseCabinetCellReply)(nil),          // 20: api.helloworld.v1.CloseCabinetCellReply
	(*CellStatusReq)(nil),                  // 21: api.helloworld.v1.CellStatusReq
	(*CellStatusRes)(nil),                  // 22: api.helloworld.v1.CellStatusRes
	(*timestamppb.Timestamp)(nil),          // 23: google.protobuf.Timestamp
}
var file_api_helloworld_v1_cell_proto_depIdxs = []int32{
	23, // 0: api.helloworld.v1.CabinetCellInfo.last_open_time:type_name -> google.protobuf.Timestamp
	23, // 1: api.helloworld.v1.CabinetCellInfo.create_time:type_name -> google.protobuf.Timestamp
	23, // 2: api.helloworld.v1.CabinetCellInfo.update_time:type_name -> google.protobuf.Timestamp
	0,  // 3: api.helloworld.v1.CreateCabinetCellReply.cell_info:type_name -> api.helloworld.v1.CabinetCellInfo
	23, // 4: api.helloworld.v1.UpdateCabinetCellRequest.last_open_time:type_name -> google.protobuf.Timestamp
	0,  // 5: api.helloworld.v1.UpdateCabinetCellReply.cell_info:type_name -> api.helloworld.v1.CabinetCellInfo
	0,  // 6: api.helloworld.v1.GetCabinetCellReply.cell_info:type_name -> api.helloworld.v1.CabinetCellInfo
	0,  // 7: api.helloworld.v1.ListCabinetCellsReply.cells:type_name -> api.helloworld.v1.CabinetCellInfo
	0,  // 8: api.helloworld.v1.SearchCabinetCellsReply.cells:type_name -> api.helloworld.v1.CabinetCellInfo
	0,  // 9: api.helloworld.v1.GetCabinetCellsByGroupReply.cells:type_name -> api.helloworld.v1.CabinetCellInfo
	21, // 10: api.helloworld.v1.CabinetCell.CellStatus:input_type -> api.helloworld.v1.CellStatusReq
	1,  // 11: api.helloworld.v1.CabinetCell.CreateCabinetCell:input_type -> api.helloworld.v1.CreateCabinetCellRequest
	3,  // 12: api.helloworld.v1.CabinetCell.UpdateCabinetCell:input_type -> api.helloworld.v1.UpdateCabinetCellRequest
	5,  // 13: api.helloworld.v1.CabinetCell.DeleteCabinetCell:input_type -> api.helloworld.v1.DeleteCabinetCellRequest
	7,  // 14: api.helloworld.v1.CabinetCell.GetCabinetCell:input_type -> api.helloworld.v1.GetCabinetCellRequest
	9,  // 15: api.helloworld.v1.CabinetCell.ListCabinetCells:input_type -> api.helloworld.v1.ListCabinetCellsRequest
	11, // 16: api.helloworld.v1.CabinetCell.SearchCabinetCells:input_type -> api.helloworld.v1.SearchCabinetCellsRequest
	13, // 17: api.helloworld.v1.CabinetCell.GetCabinetCellsByGroup:input_type -> api.helloworld.v1.GetCabinetCellsByGroupRequest
	15, // 18: api.helloworld.v1.CabinetCell.BatchCreateCabinetCells:input_type -> api.helloworld.v1.BatchCreateCabinetCellsRequest
	17, // 19: api.helloworld.v1.CabinetCell.OpenCabinetCell:input_type -> api.helloworld.v1.OpenCabinetCellRequest
	19, // 20: api.helloworld.v1.CabinetCell.CloseCabinetCell:input_type -> api.helloworld.v1.CloseCabinetCellRequest
	22, // 21: api.helloworld.v1.CabinetCell.CellStatus:output_type -> api.helloworld.v1.CellStatusRes
	2,  // 22: api.helloworld.v1.CabinetCell.CreateCabinetCell:output_type -> api.helloworld.v1.CreateCabinetCellReply
	4,  // 23: api.helloworld.v1.CabinetCell.UpdateCabinetCell:output_type -> api.helloworld.v1.UpdateCabinetCellReply
	6,  // 24: api.helloworld.v1.CabinetCell.DeleteCabinetCell:output_type -> api.helloworld.v1.DeleteCabinetCellReply
	8,  // 25: api.helloworld.v1.CabinetCell.GetCabinetCell:output_type -> api.helloworld.v1.GetCabinetCellReply
	10, // 26: api.helloworld.v1.CabinetCell.ListCabinetCells:output_type -> api.helloworld.v1.ListCabinetCellsReply
	12, // 27: api.helloworld.v1.CabinetCell.SearchCabinetCells:output_type -> api.helloworld.v1.SearchCabinetCellsReply
	14, // 28: api.helloworld.v1.CabinetCell.GetCabinetCellsByGroup:output_type -> api.helloworld.v1.GetCabinetCellsByGroupReply
	16, // 29: api.helloworld.v1.CabinetCell.BatchCreateCabinetCells:output_type -> api.helloworld.v1.BatchCreateCabinetCellsReply
	18, // 30: api.helloworld.v1.CabinetCell.OpenCabinetCell:output_type -> api.helloworld.v1.OpenCabinetCellReply
	20, // 31: api.helloworld.v1.CabinetCell.CloseCabinetCell:output_type -> api.helloworld.v1.CloseCabinetCellReply
	21, // [21:32] is the sub-list for method output_type
	10, // [10:21] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_helloworld_v1_cell_proto_init() }
func file_api_helloworld_v1_cell_proto_init() {
	if File_api_helloworld_v1_cell_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_helloworld_v1_cell_proto_rawDesc), len(file_api_helloworld_v1_cell_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_helloworld_v1_cell_proto_goTypes,
		DependencyIndexes: file_api_helloworld_v1_cell_proto_depIdxs,
		MessageInfos:      file_api_helloworld_v1_cell_proto_msgTypes,
	}.Build()
	File_api_helloworld_v1_cell_proto = out.File
	file_api_helloworld_v1_cell_proto_goTypes = nil
	file_api_helloworld_v1_cell_proto_depIdxs = nil
}
